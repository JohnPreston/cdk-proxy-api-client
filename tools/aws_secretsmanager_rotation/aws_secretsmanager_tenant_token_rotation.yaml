AWSTemplateFormatVersion: "2010-09-09"
Description: Template for the Function to rotate JWT tokens in AWS Secrets Manager
Transform:
  - AWS::Serverless-2016-10-31

Parameters:
  PermissionsBoundary:
    Type: String
    Default: none
    Description: IAM Policy ARN to use for PermissionsBoundary if required. Optional.

  FunctionsPrefix:
    Type: String
    Default: none

  CDKGatewayApiURL:
    Type: String
    Description: URL to the API Endpoint of the Conduktor Gateway

  NewTokenLifetimeInSeconds:
    Description: The lifetime in seconds of the new Tenant token.
    Type: Number
    MinValue: 1

  CdkGatewayApiSecretArn:
    Type: String
    Description: ARN of the CDK Gateway master secret containing the admin user

  CdkGatewayApiSecretRoleArn:
    Type: String
    Description: ARN of IAM Role to assume in order to retrieve the Conduktor GW API Secret
    Default: "none"

  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: VPC To run the function into

  SubnetIds:
    Type: List<AWS::EC2::Subnet::Id>
    Description: Subnets to run the lambda function from.

Conditions:
  OverrideFunctionName: !Not [!Equals [!Ref FunctionsPrefix, "none"]]
  PermissionsBoundaryCon: !Not [!Equals [!Ref PermissionsBoundary, "none"]]
  UseIamRoleForCdkGWApiSecret: !Not [!Equals [!Ref CdkGatewayApiSecretRoleArn, "none"]]

Resources:

  LambdaLayer:
    DependsOn:
      - tenantTokenRotationFunctionRole
    Type: AWS::Serverless::LayerVersion
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      CompatibleRuntimes:
        - python3.10
      ContentUri: ./layer
      Description: Dependencies for CDK-GW-TenantTokenRotation
      LayerName: cdk_gw_rotation_deps

  functionsSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: !Sub 'cfn_kafka_admin Functions SG in ${AWS::StackName}'
      VpcId: !Ref VpcId

  tenantTokenRotationFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - sts:AssumeRole
            Condition:
              Bool:
                aws:SecureTransport: 'true'
            Effect: Allow
            Principal:
              Service:
                - !Sub 'lambda.${AWS::URLSuffix}'
        Version: '2012-10-17'
      Policies:
        - PolicyName: SecretsAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Sid: MasterSecretAccess
                Action:
                  - secretsmanager:GetSecretValue
                Effect: Allow
                Resource:
                  - !Ref CdkGatewayApiSecretArn
              - Sid: KafkaSecretRotation
                Effect: Allow
                Action:
                  - "secretsmanager:DescribeSecret"
                  - "secretsmanager:GetSecretValue"
                  - "secretsmanager:PutSecretValue"
                  - "secretsmanager:UpdateSecretVersionStage"
                Resource:
                  - !Sub 'arn:aws:secretsmanager:*:${AWS::AccountId}:*'
              - Fn::If:
                - UseIamRoleForCdkGWApiSecret
                - Sid: MasterSecretAssumeRole
                  Effect: Allow
                  Action:
                    - sts:AssumeRole
                  Resource:
                    - !Ref CdkGatewayApiSecretRoleArn
                - !Ref AWS::NoValue

      Description: !Sub 'tenantTokenRotationFunctionRole-${AWS::StackName}'
      PermissionsBoundary: !If
        - PermissionsBoundaryCon
        - !Ref PermissionsBoundary
        - !Ref AWS::NoValue

  tenantTokenRotationFunction:
    Type: AWS::Serverless::Function
#    DependsOn:
#      - LambdaLayer
    Properties:
      Tags:
        Name: !If
        - OverrideFunctionName
        - !Sub '${FunctionsPrefix}-CDK-GW-TenantTokenRotation'
        - CDK-GW-TenantTokenRotation
      FunctionName: !If
        - OverrideFunctionName
        - !Sub '${FunctionsPrefix}-CDK-GW-TenantTokenRotation'
        - CDK-GW-TenantTokenRotation
      Runtime: python3.10
      Environment:
        Variables:
          CDK_API_ENDPOINT: !Ref CDKGatewayApiURL
          NEW_TOKEN_LIFETIME_IN_SECONDS: !Ref NewTokenLifetimeInSeconds
          CDK_API_SECRET_ARN: !Ref CdkGatewayApiSecretArn
          CDK_API_SECRET_ARN_ROLE: !If
            - UseIamRoleForCdkGWApiSecret
            - !Ref CdkGatewayApiSecretRoleArn
            - !Ref AWS::NoValue

      Handler: function.lambda_handler
      Timeout: 180
      Role: !GetAtt tenantTokenRotationFunctionRole.Arn
      VpcConfig:
        SecurityGroupIds:
          - !GetAtt functionsSecurityGroup.GroupId
        SubnetIds: !Ref SubnetIds
      Layers:
        - !Ref LambdaLayer
      CodeUri: function.py

  SecretsManagerFunctionAccessAuthorization:
    Type: AWS::Lambda::Permission
    DependsOn:
      - tenantTokenRotationFunction
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref tenantTokenRotationFunction
      Principal: !Sub secretsmanager.${AWS::URLSuffix}
